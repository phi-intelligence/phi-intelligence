# ========================================
# Redis Development Environment for PHI Voice
# ========================================
# This file sets up Redis for development
# Run with: docker-compose -f docker-compose.redis.yml up -d

version: '3.8'

services:
  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: phi_voice_redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - phi_voice_network

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: phi_voice_redis_commander
    ports:
      - "8080:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=phi_voice_2024
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - phi_voice_network

  # Redis Insight (Alternative Redis GUI)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: phi_voice_redis_insight
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - phi_voice_network

volumes:
  redis_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  phi_voice_network:
    driver: bridge
    name: phi_voice_network
